let User;_7de‍.x([["findAll",()=>findAll],["findOne",()=>findOne],["update",()=>update]]);_7de‍.w("../models/user-model",[["default",["User"],function(v){User=v}]]);
const upload = require("../middlewares/upload");
var multer = require("multer");

       const findAll = async (_req, res) => {
    try {
        const response = await User.find().sort({ createdAt: "desc" });
        return res.status(200).json(response);
    } catch (err) {
        return res.status(400).json({
            status: 400,
            message: err.message,
        });
    }
}

       const findOne = async (req, res) => {
    const id = req.params.id;
    try {
        const user = await User.findById(id);
        return res.status(200).json({
            status: true,
            result: user
        });
    } catch (err) {
        return res.status(400).json({
            status: 400,
            message: err.message,
        });
    }
}

const updateData = (data) => {
    _7de‍.g.console.log("data:", data);
    let user = User.findByIdAndUpdate("625763726743225ef669707e", data, {
        useFindAndModify: false,
    });
    return res.status(200).json({
        success: true,
        result: user,
    });
};

       const update = async (req, res) => {
    try {
        var data = ""
        upload(req, res, function (err) {
            data = { ...req.body, image: req.files[0].filename }
            // console.log("data: ===>", req.body);
            updateData(data)
            // let user = User.findByIdAndUpdate("625763726743225ef669707e", req.body, {
            //     useFindAndModify: false
            // });

            if (err instanceof multer.MulterError) {
                return res.status(500).json(err);
            } else if (err) {
                return res.status(500).json(err);
            }

        });

    } catch (err) {
        return res.status(500).json({
            message: err.message
        });
    }
}